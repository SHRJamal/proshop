/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */

import type { Context as ContextModule } from './contextModule'

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {}

export interface NexusGenEnums {}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
}

export interface NexusGenObjects {
  LoginResult: {
    // root type
    error?: string | null // String
    token?: string | null // String
  }
  Mutation: {}
  Product: {
    // root type
    brand?: string | null // String
    category?: string | null // String
    countInStock?: number | null // Int
    description?: string | null // String
    id?: string | null // String
    image?: string | null // String
    name?: string | null // String
    numReviews?: number | null // Int
    price?: number | null // Float
    rating?: number | null // Float
  }
  Profile: {
    // root type
    email?: string | null // String
    id?: string | null // String
    isAdmin?: boolean | null // Boolean
    username?: string | null // String
  }
  Query: {}
  RegisterResult: {
    // root type
    error?: string | null // String
    token?: string | null // String
  }
  SignoutResult: {
    // root type
    error?: string | null // String
    success?: boolean | null // Boolean
  }
}

export interface NexusGenInterfaces {}

export interface NexusGenUnions {}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  LoginResult: {
    // field return type
    error: string | null // String
    token: string | null // String
  }
  Mutation: {
    // field return type
    login: NexusGenRootTypes['LoginResult'] | null // LoginResult
    signout: NexusGenRootTypes['SignoutResult'] | null // SignoutResult
    signup: NexusGenRootTypes['RegisterResult'] | null // RegisterResult
    updateProfile: NexusGenRootTypes['Profile'] | null // Profile
  }
  Product: {
    // field return type
    brand: string | null // String
    category: string | null // String
    countInStock: number | null // Int
    description: string | null // String
    id: string | null // String
    image: string | null // String
    name: string | null // String
    numReviews: number | null // Int
    price: number | null // Float
    rating: number | null // Float
  }
  Profile: {
    // field return type
    email: string | null // String
    id: string | null // String
    isAdmin: boolean | null // Boolean
    username: string | null // String
  }
  Query: {
    // field return type
    getProducts: Array<NexusGenRootTypes['Product'] | null> | null // [Product]
    productById: NexusGenRootTypes['Product'] | null // Product
    profile: NexusGenRootTypes['Profile'] | null // Profile
  }
  RegisterResult: {
    // field return type
    error: string | null // String
    token: string | null // String
  }
  SignoutResult: {
    // field return type
    error: string | null // String
    success: boolean | null // Boolean
  }
}

export interface NexusGenFieldTypeNames {
  LoginResult: {
    // field return type name
    error: 'String'
    token: 'String'
  }
  Mutation: {
    // field return type name
    login: 'LoginResult'
    signout: 'SignoutResult'
    signup: 'RegisterResult'
    updateProfile: 'Profile'
  }
  Product: {
    // field return type name
    brand: 'String'
    category: 'String'
    countInStock: 'Int'
    description: 'String'
    id: 'String'
    image: 'String'
    name: 'String'
    numReviews: 'Int'
    price: 'Float'
    rating: 'Float'
  }
  Profile: {
    // field return type name
    email: 'String'
    id: 'String'
    isAdmin: 'Boolean'
    username: 'String'
  }
  Query: {
    // field return type name
    getProducts: 'Product'
    productById: 'Product'
    profile: 'Profile'
  }
  RegisterResult: {
    // field return type name
    error: 'String'
    token: 'String'
  }
  SignoutResult: {
    // field return type name
    error: 'String'
    success: 'Boolean'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    login: {
      // args
      email: string // String!
      password: string // String!
    }
    signup: {
      // args
      email: string // String!
      password: string // String!
      username: string // String!
    }
    updateProfile: {
      // args
      password?: string | null // String
      username?: string | null // String
    }
  }
  Query: {
    productById: {
      // args
      id: string // String!
    }
  }
}

export interface NexusGenAbstractTypeMembers {}

export interface NexusGenTypeInterfaces {}

export type NexusGenObjectNames = keyof NexusGenObjects

export type NexusGenInputNames = never

export type NexusGenEnumNames = never

export type NexusGenInterfaceNames = never

export type NexusGenScalarNames = keyof NexusGenScalars

export type NexusGenUnionNames = never

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never

export type NexusGenAbstractsUsingStrategyResolveType = never

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: ContextModule
  inputTypes: NexusGenInputs
  rootTypes: NexusGenRootTypes
  inputTypeShapes: NexusGenInputs & NexusGenEnums & NexusGenScalars
  argTypes: NexusGenArgTypes
  fieldTypes: NexusGenFieldTypes
  fieldTypeNames: NexusGenFieldTypeNames
  allTypes: NexusGenAllTypes
  typeInterfaces: NexusGenTypeInterfaces
  objectNames: NexusGenObjectNames
  inputNames: NexusGenInputNames
  enumNames: NexusGenEnumNames
  interfaceNames: NexusGenInterfaceNames
  scalarNames: NexusGenScalarNames
  unionNames: NexusGenUnionNames
  allInputTypes:
    | NexusGenTypes['inputNames']
    | NexusGenTypes['enumNames']
    | NexusGenTypes['scalarNames']
  allOutputTypes:
    | NexusGenTypes['objectNames']
    | NexusGenTypes['enumNames']
    | NexusGenTypes['unionNames']
    | NexusGenTypes['interfaceNames']
    | NexusGenTypes['scalarNames']
  allNamedTypes:
    | NexusGenTypes['allInputTypes']
    | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames']
  abstractTypeMembers: NexusGenAbstractTypeMembers
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType
  features: NexusGenFeaturesConfig
}

declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {}
  interface NexusGenPluginInputTypeConfig<TypeName extends string> {}
  interface NexusGenPluginFieldConfig<
    TypeName extends string,
    FieldName extends string,
  > {}
  interface NexusGenPluginInputFieldConfig<
    TypeName extends string,
    FieldName extends string,
  > {}
  interface NexusGenPluginSchemaConfig {}
  interface NexusGenPluginArgConfig {}
}
